<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="ALL" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="79509455-0791-4ce8-ac74-35d8481e82e3" name="Changes" comment="">
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/README.md" beforeDir="false" afterPath="$PROJECT_DIR$/README.md" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Go File" />
      </list>
    </option>
  </component>
  <component name="GOROOT" url="file://$PROJECT_DIR$/../sdk/go1.19.10" />
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="HighlightingSettingsPerFile">
    <setting file="file://$PROJECT_DIR$/../go/pkg/mod/github.com/swaggo/swag@v1.8.1/spec.go" root0="SKIP_INSPECTION" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 8
}</component>
  <component name="ProjectId" id="2d2WFw4b03tsKoqf0eqzwTISjYK" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "DefaultGoTemplateProperty": "Go File",
    "Go Build.go build aothorization.executor": "Run",
    "Go Build.go build github.com/vadim-shalnev/swaggerApiExample/Clean_Architecture/cmd.executor": "Run",
    "Go Build.go build github.com/vadim-shalnev/swaggerApiExample/client.executor": "Run",
    "Go Build.go build github.com/vadim-shalnev/swaggerApiExample/cmd.executor": "Run",
    "Go Build.go build github/vadim-shalnev.executor": "Run",
    "Go Build.go build github/vadim-shalnev/Clean_Architecture/Authorisation.executor": "Run",
    "Go Build.go build github/vadim-shalnev/Clean_Architecture/Handle.executor": "Run",
    "Go Build.go build github/vadim-shalnev/Clean_Architecture/Logic.executor": "Run",
    "Go Build.go build github/vadim-shalnev/client.executor": "Run",
    "Go Build.go build handle.executor": "Run",
    "Go Build.go build logic.executor": "Run",
    "RunOnceActivity.OpenProjectViewOnStart": "true",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "RunOnceActivity.go.formatter.settings.were.checked": "true",
    "RunOnceActivity.go.migrated.go.modules.settings": "true",
    "RunOnceActivity.go.modules.automatic.dependencies.download": "true",
    "RunOnceActivity.go.modules.go.list.on.any.changes.was.set": "true",
    "git-widget-placeholder": "main",
    "go.import.settings.migrated": "true",
    "go.sdk.automatically.set": "true",
    "last_opened_file_path": "/home/vubuntu/PetStore",
    "node.js.detected.package.eslint": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "nodejs_package_manager_path": "npm",
    "run.code.analysis.last.selected.profile": "pProject Default",
    "settings.editor.selected.configurable": "com.goide.configuration.GoLibrariesConfigurableProvider"
  }
}]]></component>
  <component name="RecentsManager">
    <key name="MoveFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/internal/geocoder" />
      <recent name="$PROJECT_DIR$/internal/user" />
      <recent name="$PROJECT_DIR$/internal/auth" />
      <recent name="$PROJECT_DIR$" />
      <recent name="$PROJECT_DIR$/Clean_Architecture/internal" />
    </key>
  </component>
  <component name="RunManager" selected="Go Build.go build github.com/vadim-shalnev/swaggerApiExample/client">
    <configuration default="true" type="GoApplicationRunConfiguration" factoryName="Go Application">
      <module name="swaggerApiExample" />
      <working_directory value="$PROJECT_DIR$" />
      <go_parameters value="-i" />
      <kind value="FILE" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <method v="2" />
    </configuration>
    <configuration name="go build aothorization" type="GoApplicationRunConfiguration" factoryName="Go Application" temporary="true" nameIsGenerated="true">
      <module name="swaggerApiExample" />
      <working_directory value="$PROJECT_DIR$/Clean_Architecture/Repository" />
      <kind value="PACKAGE" />
      <package value="aothorization" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$/Clean_Architecture/Authorisation/main.go" />
      <method v="2" />
    </configuration>
    <configuration name="go build github.com/vadim-shalnev/swaggerApiExample/Clean_Architecture/cmd" type="GoApplicationRunConfiguration" factoryName="Go Application" temporary="true" nameIsGenerated="true">
      <module name="swaggerApiExample" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="github.com/vadim-shalnev/swaggerApiExample/Clean_Architecture/cmd" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$/Clean_Architecture/cmd/main.go" />
      <method v="2" />
    </configuration>
    <configuration name="go build github.com/vadim-shalnev/swaggerApiExample/client" type="GoApplicationRunConfiguration" factoryName="Go Application" temporary="true" nameIsGenerated="true">
      <module name="swaggerApiExample" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="github.com/vadim-shalnev/swaggerApiExample/client" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$/client/main.go" />
      <method v="2" />
    </configuration>
    <configuration name="go build github.com/vadim-shalnev/swaggerApiExample/cmd" type="GoApplicationRunConfiguration" factoryName="Go Application" temporary="true" nameIsGenerated="true">
      <module name="swaggerApiExample" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="github.com/vadim-shalnev/swaggerApiExample/cmd" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$/cmd/main.go" />
      <method v="2" />
    </configuration>
    <configuration name="go build github/vadim-shalnev/client" type="GoApplicationRunConfiguration" factoryName="Go Application" temporary="true" nameIsGenerated="true">
      <module name="swaggerApiExample" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="github/vadim-shalnev/client" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$/client/main.go" />
      <method v="2" />
    </configuration>
    <configuration default="true" type="GoTestRunConfiguration" factoryName="Go Test">
      <module name="swaggerApiExample" />
      <working_directory value="$PROJECT_DIR$" />
      <go_parameters value="-i" />
      <kind value="DIRECTORY" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <method v="2" />
    </configuration>
    <list>
      <item itemvalue="Go Build.go build aothorization" />
      <item itemvalue="Go Build.go build github.com/vadim-shalnev/swaggerApiExample/Clean_Architecture/cmd" />
      <item itemvalue="Go Build.go build github.com/vadim-shalnev/swaggerApiExample/client" />
      <item itemvalue="Go Build.go build github.com/vadim-shalnev/swaggerApiExample/cmd" />
      <item itemvalue="Go Build.go build github/vadim-shalnev/client" />
    </list>
    <recent_temporary>
      <list>
        <item itemvalue="Go Build.go build github.com/vadim-shalnev/swaggerApiExample/client" />
        <item itemvalue="Go Build.go build github.com/vadim-shalnev/swaggerApiExample/cmd" />
        <item itemvalue="Go Build.go build github.com/vadim-shalnev/swaggerApiExample/Clean_Architecture/cmd" />
        <item itemvalue="Go Build.go build aothorization" />
        <item itemvalue="Go Build.go build github/vadim-shalnev/client" />
      </list>
    </recent_temporary>
  </component>
  <component name="SharedIndexes">
    <attachedChunks>
      <set>
        <option value="bundled-gosdk-2946fb9b3188-155fe4b6e3a0-org.jetbrains.plugins.go.sharedIndexes.bundled-GO-233.15026.17" />
      </set>
    </attachedChunks>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="VgoProject">
    <settings-migrated>true</settings-migrated>
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager>
      <breakpoints>
        <line-breakpoint enabled="true" type="DlvLineBreakpoint">
          <url>file://$PROJECT_DIR$/internal/Auth/authRepository/authRepository.go</url>
          <line>11</line>
          <option name="timeStamp" value="1" />
        </line-breakpoint>
      </breakpoints>
    </breakpoint-manager>
  </component>
</project>